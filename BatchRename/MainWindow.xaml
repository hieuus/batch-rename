<Window x:Class="BatchRename.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BatchRename"
        mc:Ignorable="d"
        Title="Batch Rename" Height="800" Width="1210"
        ResizeMode="CanMinimize"
        FontFamily="Poppins">
    <Window.Resources>
        <!--Color-->
        <SolidColorBrush x:Key="PrimaryBlueColor" Color="#348EF6" />
        <SolidColorBrush x:Key="SecondaryBlueColor" Color="#EFF2FF"/>

        <SolidColorBrush x:Key="PrimaryTextColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="SecondaryTextColor" Color="#BBC1D1"/>

        <SolidColorBrush x:Key="PrimaryGrayColor" Color="#BBC1D1"/>

        <!--Tab Control Style-->
        <Style x:Key="TabControlStyle" TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource SecondaryBlueColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Grid.Row="0"
                                      Background="Transparent"
                                      IsItemsHost="True"
                                      HorizontalAlignment="Center"/>
                            <Border Grid.Row="1"
                                    CornerRadius="5"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="True"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Tab Item Style-->
        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="Background" Value="#9ac8fc"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0, 0, 5, 0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Padding" Value="10 10"/>
            <Setter Property="FontWeight" Value="500"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid SnapsToDevicePixels="True">
                            <Border CornerRadius="5"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Margin="{TemplateBinding Margin}"/>
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="Header"
                                              Focusable="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>

        <!--Button Style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="{DynamicResource PrimaryBlueColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"></ColumnDefinition>
            <ColumnDefinition Width="3*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0"
                CornerRadius="10"
                Background="{DynamicResource PrimaryTextColor}"
                Padding="30"
                VerticalAlignment="Center"
                HorizontalAlignment="Left" Margin="30,0,0,0">
            <TabControl Width="500" Height="650" Style="{DynamicResource TabControlStyle}">
                <!--Tab Convert-->
                <TabItem Style="{DynamicResource TabItemStyle}" FontWeight="Normal">
                    <TabItem.Header>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Height="15" Width="15" Source="Icons/convert.png" />
                            <TextBlock Text="Convert" Margin="1,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </TabItem.Header>
                    <StackPanel Orientation="Vertical" Margin="70,10,0,0">
                        <ScrollViewer MaxHeight="570" VerticalScrollBarVisibility="Hidden">
                            <StackPanel>
                                <!--Option-->
                                <StackPanel>
                                    <TextBlock Text="Option" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource SecondaryTextColor}" Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal">
                                        <RadioButton GroupName="option" FontSize="17" Margin="30,0,0,0">Files</RadioButton>
                                        <RadioButton GroupName="option" FontSize="17" Margin="70,0,0,0">Folders</RadioButton>
                                    </StackPanel>
                                </StackPanel>
                                <!--Rules-->
                                <StackPanel Margin="0,20,0,0">
                                    <TextBlock Text="Rules" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource SecondaryTextColor}" Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal">
                                        <!--Add Button-->
                                        <Button Style="{DynamicResource RoundedButtonStyle}" Width="80"
                                        FontSize="13"
                                        Background="{DynamicResource PrimaryBlueColor}" Foreground="White" Padding="1,2,1,2">
                                            <Button.Content>
                                                <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                                                    <Image Height="13" Width="13" Source="../Icons/add.png"/>
                                                    <TextBlock  Text="Add" Margin="4,0,0,0"/>
                                                </StackPanel>
                                            </Button.Content>
                                        </Button>
                                        <!--Unselect all Button-->
                                        <Button Style="{DynamicResource RoundedButtonStyle}" Width="110"
                                                FontSize="13"
                                                Background="{DynamicResource PrimaryBlueColor}"
                                                Foreground="White"
                                                Padding="1,2,1,2" Margin="15,0,15,0"
                                                Click="selectButton_Click"
                                                Loaded="selectButton_Loaded">
                                            <Button.Content>
                                                <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                                                    <Image x:Name="selectButton_Img" Height="13" Width="13" Source="../Icons/remove.png"/>
                                                    <TextBlock x:Name="selectButton_Text" Text="Select all" Margin="4,0,0,0"/>
                                                </StackPanel>
                                            </Button.Content>
                                        </Button>
                                        <!--Move Rules-->
                                        <StackPanel Orientation="Horizontal">
                                            <!--Move to top-->
                                            <Button Style="{DynamicResource RoundedButtonStyle}" Width="30"
                                        FontSize="13"
                                        Background="{DynamicResource PrimaryBlueColor}" Foreground="White"
                                            Padding="1,2,1,2">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Height="13" Width="13" Source="../Icons/arrow-up.png"/>
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                            <!--Move up-->
                                            <Button Style="{DynamicResource RoundedButtonStyle}" Width="30"
                                        FontSize="13"
                                        Background="{DynamicResource PrimaryBlueColor}" Foreground="White"
                                            Padding="1,2,1,2" Margin="5,0,5,0">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Height="13" Width="13" Source="../Icons/arrow-1up.png"/>
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                            <!--Move down-->
                                            <Button Style="{DynamicResource RoundedButtonStyle}" Width="30"
                                        FontSize="13"
                                        Background="{DynamicResource PrimaryBlueColor}" Foreground="White"
                                            Padding="1,2,1,2" Margin="0,0,5,0">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Height="13" Width="13" Source="../Icons/arrow-1down.png"/>
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                            <!--Move to end-->
                                            <Button Style="{DynamicResource RoundedButtonStyle}" Width="30"
                                        FontSize="13"
                                        Background="{DynamicResource PrimaryBlueColor}" Foreground="White"
                                            Padding="1,2,1,2">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Height="13" Width="13" Source="../Icons/arrow-down.png"/>
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>

                                <!--Select Rules-->
                                <StackPanel Orientation="Vertical" Margin="0,30,0,0">
                                    <!--Rule: Add Counter-->
                                    <StackPanel x:Name="stp_addCounter">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Name="addCounterCheckbox"
                                                      IsChecked="False"
                                                      Checked="addCounter_Checked"
                                                      Unchecked="addCounter_UnChecked">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </CheckBox.LayoutTransform>
                                            </CheckBox>
                                            <TextBlock Text="Add Counter"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="addCounter_MouseDown"/>
                                        </StackPanel>
                                        <!--Rule: Add Counter - Start, Step, Number Digts-->
                                        <StackPanel Name="paraAddCounter" 
                                        Orientation="Horizontal"
                                        Margin="22,0,0,0"
                                        Visibility="Collapsed">
                                            <!--Start-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="start" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="Start" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=start}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <!--Step-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="step" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="Step" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=step}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <!--Number Digits-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="numberDigits" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="Number Digits" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=numberDigits}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>
                                    
                                    <!--Rule: Remove Space from the begin and ending-->
                                    <StackPanel Name="stp_removeSpace"
                                        Orientation="Horizontal" Margin="0,15,0,0">
                                        <CheckBox Name="removeSpaceBeginEnding"
                                          IsChecked="False">
                                            <CheckBox.LayoutTransform>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                            </CheckBox.LayoutTransform>
                                        </CheckBox>
                                        <TextBlock Text="Remove Space From The Begin And Ending"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="removeSpaceBeginEnding_MouseDown"/>
                                    </StackPanel>
                                    
                                    <!--Rule: Replace Character-->
                                    <StackPanel Name="stp_replaceCharacter">
                                        <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                            <CheckBox Name="replaceCharacter"
                                          IsChecked="False"
                                          Checked="replaceCharacter_Checked"
                                          Unchecked="replaceCharacter_UnChecked">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </CheckBox.LayoutTransform>
                                            </CheckBox>
                                            <TextBlock Text="Replace Character"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="replaceCharacter_MouseDown"/>
                                        </StackPanel>
                                        <!--Rule: Replace Character - From, To-->
                                        <StackPanel Name="paraReplaceCharacter" 
                                        Orientation="Horizontal"
                                        Margin="22,0,0,0"
                                        Visibility="Collapsed">
                                            <!--From-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="from" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="From" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=from}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                            <!--To-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="to" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="To" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=to}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>

                                    <!--Rule: Add Prefix-->
                                    <StackPanel x:Name="stp_addPrefix">
                                        <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                            <CheckBox Name="addPrefix"
                                                      IsChecked="False"
                                                      Checked="addPrefix_Checked"
                                                      Unchecked="addPrefix_UnChecked">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </CheckBox.LayoutTransform>
                                            </CheckBox>
                                            <TextBlock Text="Add Prefix"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="addPrefix_MouseDown"/>
                                        </StackPanel>
                                        <!--Rule: Add Prefix - Prefix-->
                                        <StackPanel Name="paraAddPrefix" 
                                        Orientation="Horizontal"
                                        Margin="22,0,0,0"
                                        Visibility="Collapsed">
                                            <!--Prefix-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="prefix" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="Prefix" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=prefix}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>

                                    <!--Rule: Add Subfix-->
                                    <StackPanel x:Name="stp_addSubfix">
                                        <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                                            <CheckBox Name="addSubfix"
                                          IsChecked="False"
                                          Checked="addSubfix_Checked"
                                          Unchecked="addSubfix_UnChecked">
                                                <CheckBox.LayoutTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                                </CheckBox.LayoutTransform>
                                            </CheckBox>
                                            <TextBlock Text="Add Subfix"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="addSubfix_MouseDown"/>
                                        </StackPanel>
                                        <!--Rule: Add Subfix - Subfix-->
                                        <StackPanel Name="paraAddSubfix" 
                                        Orientation="Horizontal"
                                        Margin="22,0,0,0"
                                        Visibility="Collapsed">
                                            <!--Subfix-->
                                            <Grid>
                                                <TextBox BorderThickness="2"  Width="100" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="subfix" Margin="5"/>
                                                <TextBlock IsHitTestVisible="False" FontSize="13" Text="Subfix" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Text, ElementName=subfix}" Value="">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>
                                        
                                    <!--Rule: Convert lowercase-->
                                    <StackPanel x:Name="stp_lowercase" Orientation="Horizontal" Margin="0,15,0,0">
                                        <CheckBox Name="converLowercase"
                                          IsChecked="False">
                                            <CheckBox.LayoutTransform>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                            </CheckBox.LayoutTransform>
                                        </CheckBox>
                                        <TextBlock Text="Convert Lowercase"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="convertLowercase_MouseDown"/>
                                    </StackPanel>

                                    <!--Rule: Convert PascalCase-->
                                    <StackPanel x:Name="stp_pascalCase" Orientation="Horizontal" Margin="0,15,0,0">
                                        <CheckBox Name="convertPascalCase"
                                          IsChecked="False">
                                            <CheckBox.LayoutTransform>
                                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                            </CheckBox.LayoutTransform>
                                        </CheckBox>
                                        <TextBlock Text="Convert PascalCase"
                                           FontSize="17"
                                           Foreground="Black"
                                           Margin="5,0,0,0" VerticalAlignment="Center"
                                           MouseDown="convertPascalCase_MouseDown"/>
                                    </StackPanel>
                                </StackPanel>

                                <!--Example-->
                                <StackPanel Margin="0,30,0,0">
                                    <TextBlock Text="Example" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource SecondaryTextColor}" Margin="0,0,0,10"/>
                                    <TextBlock Text="SampleOutput-EditMe" FontSize="17" Foreground="Black"/>
                                </StackPanel>

                                <!--Save Button and Convert Button-->
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,60,0">
                                    <!--Save Button-->
                                    <Button x:Name="saveButton"
                                        Style="{DynamicResource RoundedButtonStyle}"
                                        Width="120" Height="45"
                                        FontSize="16"
                                        Background="#107c41" Foreground="White"                                
                                        HorizontalAlignment="Center">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                                                <Image Height="16" Width="16" Source="../Icons/save.png"/>
                                                <TextBlock  Text="Save Rules" Margin="4,0,0,0"/>
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                    <!--Convert Button-->
                                    <Button x:Name="convertButton"
                                            Style="{DynamicResource RoundedButtonStyle}"
                                            Width="120" Height="45"
                                            FontSize="16"
                                            Background="#eea628" Foreground="White"                                
                                            HorizontalAlignment="Center" Margin="30,0,0,0">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                                                <Image Height="18" Width="18" Source="../Icons/convert.png"/>
                                                <TextBlock  Text="Convert" Margin="4,0,0,0"/>
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </StackPanel>
                </TabItem>

                <!--Import Rules-->
                <TabItem Style="{DynamicResource TabItemStyle}" VerticalAlignment="Center" Width="116">
                    <TabItem.Header>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Height="12" Width="12" Source="Icons/import.png" />
                            <TextBlock Text="Import Rules" Margin="3,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <TextBlock Text="Import Rules"
                                   Foreground="{DynamicResource SecondaryTextColor}"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Grid>
                </TabItem>

                <!--Save Rules-->
                <TabItem Style="{DynamicResource TabItemStyle}">
                    <TabItem.Header>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Image Height="12" Width="12" Source="Icons/save.png" />
                            <TextBlock Text="Save Rules" Margin="3,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <TextBlock Text="Save Rules"
                                   Foreground="{DynamicResource SecondaryTextColor}"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Grid>
                </TabItem>

            </TabControl>
        </Border>

        <Border Grid.Column="1"
                CornerRadius="10"
                Background="{DynamicResource PrimaryTextColor}"
                Padding="30"
                VerticalAlignment="Center"
                HorizontalAlignment="Left" Margin="30,0,0,0">
            <StackPanel Height="650" Width="600">
                <!--Choose and Save to-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <!--Choose-->
                    <Button x:Name="chooseButton"
                                        Style="{DynamicResource RoundedButtonStyle}"
                                        Width="140"
                                        Background="{DynamicResource PrimaryBlueColor}" Foreground="White"                                
                                        HorizontalAlignment="Center" Height="34" VerticalAlignment="Center" >
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <Image Height="13" Width="13" Source="../Icons/choice.png"/>
                                <TextBlock FontFamily="Poppins" FontSize="13" Text="Choose" Margin="4,0,0,0"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    
                    <!--Save to-->
                    <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                        <TextBlock VerticalAlignment="Center" Text="Save to" FontSize="18" FontWeight="Bold" Foreground="{DynamicResource SecondaryTextColor}" Margin="60,0,5,0"/>
                        <Grid VerticalAlignment="Center">
                            <TextBox BorderThickness="2"  Width="250" Padding="5" FontSize="13" FontWeight="Normal" VerticalAlignment="Bottom" HorizontalAlignment="Left" x:Name="saveTo" Margin="5"/>
                            <TextBlock IsHitTestVisible="False" FontSize="13" Text="Enter Location" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="14,0,0,0" Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=saveTo}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Button x:Name="saveToChooseLocation"
                                        Style="{DynamicResource RoundedButtonStyle}"
                                        Width="40"
                                        FontSize="15"
                                        Background="{DynamicResource PrimaryGrayColor}" Foreground="White"                                
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Padding="10,5,10,5" Click="saveToChooseLocation_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                    <TextBlock FontFamily="Poppins" Text="..."/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </StackPanel>
            
                <!--Data Grid: Old name, new name-->
                <Grid Margin="0,10,0,0">
                    <DataGrid x:Name="dataGridRename"
                              Height="600" BorderThickness="0" ScrollViewer.CanContentScroll="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="No" FontSize="15" FontFamily="Poppins" FontWeight="Bold" Width="50"></DataGridTextColumn>
                            <DataGridTextColumn Header="File Name" FontSize="15" FontFamily="Poppins" FontWeight="Bold"  Width="*"></DataGridTextColumn>
                            <DataGridTextColumn Header="New File Name" FontSize="15" FontFamily="Poppins" FontWeight="Bold"  Width="*"></DataGridTextColumn>
                        </DataGrid.Columns>
                        
                    </DataGrid>
                </Grid>
            </StackPanel>

        </Border>
    </Grid>
</Window>
